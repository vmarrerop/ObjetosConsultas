// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModelosConsultas.DataAccess;

#nullable disable

namespace ModelosConsultas.Migrations
{
    [DbContext(typeof(ConsultaDBContext))]
    partial class ConsultaDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ModelosConsultas.Models.DataModels.AntropometricosModel", b =>
                {
                    b.Property<int>("idPatientAnthropometricData")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPatientAnthropometricData"));

                    b.Property<DateTime?>("createdOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("height")
                        .HasColumnType("real");

                    b.Property<int>("idUserModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("weight")
                        .HasColumnType("real");

                    b.HasKey("idPatientAnthropometricData");

                    b.ToTable("Antropometricos");
                });

            modelBuilder.Entity("ModelosConsultas.Models.DataModels.HabitoIntestinalModel", b =>
                {
                    b.Property<int>("idPatientBowelHabit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPatientBowelHabit"));

                    b.Property<DateTime?>("createdOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idUserModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("idPatientBowelHabit");

                    b.ToTable("Habito");
                });

            modelBuilder.Entity("ModelosConsultas.Models.DataModels.MotivoConsultaModel", b =>
                {
                    b.Property<int>("idPatientReasonOfVisit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPatientReasonOfVisit"));

                    b.Property<DateTime?>("createdOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("idUserModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("reason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idPatientReasonOfVisit");

                    b.ToTable("Motivo");
                });

            modelBuilder.Entity("ModelosConsultas.Models.DataModels.NotaConsultaModel", b =>
                {
                    b.Property<int>("idPatientCheckupNote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPatientCheckupNote"));

                    b.Property<string>("comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createdOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("idUserModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("idPatientCheckupNote");

                    b.ToTable("Nota");
                });

            modelBuilder.Entity("ModelosConsultas.Models.DataModels.ObjetoConsulta", b =>
                {
                    b.Property<int>("idEvent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEvent"));

                    b.Property<DateTime?>("createdOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("idPatienteFile")
                        .HasColumnType("int");

                    b.Property<int>("idUser")
                        .HasColumnType("int");

                    b.Property<int>("idUserModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("idEvent");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("ModelosConsultas.Models.DataModels.PadecimientoModel", b =>
                {
                    b.Property<int>("idPatientSuffering")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPatientSuffering"));

                    b.Property<DateTime?>("createdOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("idUserModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("suffering")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idPatientSuffering");

                    b.ToTable("Padecimiento");
                });
#pragma warning restore 612, 618
        }
    }
}
